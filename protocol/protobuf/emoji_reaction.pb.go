// Code generated by protoc-gen-go. DO NOT EDIT.
// source: emoji_reaction.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmojiReaction_Type int32

const (
	EmojiReaction_UNKNOWN_EMOJI_REACTION_TYPE EmojiReaction_Type = 0
	EmojiReaction_LOVE                        EmojiReaction_Type = 1
	EmojiReaction_THUMBS_UP                   EmojiReaction_Type = 2
	EmojiReaction_THUMBS_DOWN                 EmojiReaction_Type = 3
	EmojiReaction_LAUGH                       EmojiReaction_Type = 4
	EmojiReaction_SAD                         EmojiReaction_Type = 5
	EmojiReaction_ANGRY                       EmojiReaction_Type = 6
)

var EmojiReaction_Type_name = map[int32]string{
	0: "UNKNOWN_EMOJI_REACTION_TYPE",
	1: "LOVE",
	2: "THUMBS_UP",
	3: "THUMBS_DOWN",
	4: "LAUGH",
	5: "SAD",
	6: "ANGRY",
}

var EmojiReaction_Type_value = map[string]int32{
	"UNKNOWN_EMOJI_REACTION_TYPE": 0,
	"LOVE":                        1,
	"THUMBS_UP":                   2,
	"THUMBS_DOWN":                 3,
	"LAUGH":                       4,
	"SAD":                         5,
	"ANGRY":                       6,
}

func (x EmojiReaction_Type) String() string {
	return proto.EnumName(EmojiReaction_Type_name, int32(x))
}

func (EmojiReaction_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0a088c907bbc7ed6, []int{0, 0}
}

type EmojiReaction struct {
	Clock                uint64             `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	ChatId               string             `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	MessageId            string             `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Type                 EmojiReaction_Type `protobuf:"varint,4,opt,name=type,proto3,enum=protobuf.EmojiReaction_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EmojiReaction) Reset()         { *m = EmojiReaction{} }
func (m *EmojiReaction) String() string { return proto.CompactTextString(m) }
func (*EmojiReaction) ProtoMessage()    {}
func (*EmojiReaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a088c907bbc7ed6, []int{0}
}

func (m *EmojiReaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmojiReaction.Unmarshal(m, b)
}
func (m *EmojiReaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmojiReaction.Marshal(b, m, deterministic)
}
func (m *EmojiReaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmojiReaction.Merge(m, src)
}
func (m *EmojiReaction) XXX_Size() int {
	return xxx_messageInfo_EmojiReaction.Size(m)
}
func (m *EmojiReaction) XXX_DiscardUnknown() {
	xxx_messageInfo_EmojiReaction.DiscardUnknown(m)
}

var xxx_messageInfo_EmojiReaction proto.InternalMessageInfo

func (m *EmojiReaction) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *EmojiReaction) GetChatId() string {
	if m != nil {
		return m.ChatId
	}
	return ""
}

func (m *EmojiReaction) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *EmojiReaction) GetType() EmojiReaction_Type {
	if m != nil {
		return m.Type
	}
	return EmojiReaction_UNKNOWN_EMOJI_REACTION_TYPE
}

type EmojiReactionRetraction struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	EmojiReactionId      string   `protobuf:"bytes,2,opt,name=emoji_reaction_id,json=emojiReactionId,proto3" json:"emoji_reaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmojiReactionRetraction) Reset()         { *m = EmojiReactionRetraction{} }
func (m *EmojiReactionRetraction) String() string { return proto.CompactTextString(m) }
func (*EmojiReactionRetraction) ProtoMessage()    {}
func (*EmojiReactionRetraction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a088c907bbc7ed6, []int{1}
}

func (m *EmojiReactionRetraction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmojiReactionRetraction.Unmarshal(m, b)
}
func (m *EmojiReactionRetraction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmojiReactionRetraction.Marshal(b, m, deterministic)
}
func (m *EmojiReactionRetraction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmojiReactionRetraction.Merge(m, src)
}
func (m *EmojiReactionRetraction) XXX_Size() int {
	return xxx_messageInfo_EmojiReactionRetraction.Size(m)
}
func (m *EmojiReactionRetraction) XXX_DiscardUnknown() {
	xxx_messageInfo_EmojiReactionRetraction.DiscardUnknown(m)
}

var xxx_messageInfo_EmojiReactionRetraction proto.InternalMessageInfo

func (m *EmojiReactionRetraction) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *EmojiReactionRetraction) GetEmojiReactionId() string {
	if m != nil {
		return m.EmojiReactionId
	}
	return ""
}

func init() {
	proto.RegisterEnum("protobuf.EmojiReaction_Type", EmojiReaction_Type_name, EmojiReaction_Type_value)
	proto.RegisterType((*EmojiReaction)(nil), "protobuf.EmojiReaction")
	proto.RegisterType((*EmojiReactionRetraction)(nil), "protobuf.EmojiReactionRetraction")
}

func init() { proto.RegisterFile("emoji_reaction.proto", fileDescriptor_0a088c907bbc7ed6) }

var fileDescriptor_0a088c907bbc7ed6 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4f, 0xbb, 0x30,
	0x1c, 0xc5, 0x7f, 0x8c, 0xc2, 0xc6, 0xf7, 0x97, 0xb9, 0xda, 0x2c, 0x19, 0x89, 0x1a, 0x09, 0x27,
	0xe2, 0x81, 0x18, 0xfd, 0x0b, 0xd0, 0x91, 0x0d, 0xdd, 0xca, 0xd2, 0x81, 0xcb, 0xe2, 0xa1, 0x61,
	0x50, 0x15, 0x75, 0x42, 0x18, 0x1e, 0x76, 0xf4, 0x3f, 0x37, 0x20, 0x46, 0xb9, 0x78, 0x6a, 0x3e,
	0xef, 0xbd, 0xf4, 0xb5, 0x0f, 0x86, 0x62, 0x9b, 0x3d, 0xa7, 0xbc, 0x10, 0x51, 0x5c, 0xa6, 0xd9,
	0x9b, 0x9d, 0x17, 0x59, 0x99, 0x91, 0x5e, 0x7d, 0x6c, 0xde, 0x1f, 0xcc, 0x8f, 0x0e, 0xf4, 0xdd,
	0x2a, 0xc2, 0x9a, 0x04, 0x19, 0x82, 0x12, 0xbf, 0x66, 0xf1, 0x8b, 0x2e, 0x19, 0x92, 0x85, 0xd8,
	0x17, 0x90, 0x11, 0x74, 0xe3, 0xa7, 0xa8, 0xe4, 0x69, 0xa2, 0x77, 0x0c, 0xc9, 0xd2, 0x98, 0x5a,
	0xa1, 0x97, 0x90, 0x13, 0x80, 0xad, 0xd8, 0xed, 0xa2, 0x47, 0x51, 0x79, 0x72, 0xed, 0x69, 0x8d,
	0xe2, 0x25, 0xe4, 0x1c, 0x50, 0xb9, 0xcf, 0x85, 0x8e, 0x0c, 0xc9, 0x3a, 0xb8, 0x38, 0xb6, 0xbf,
	0x8b, 0xed, 0x56, 0xa9, 0x1d, 0xec, 0x73, 0xc1, 0xea, 0xa4, 0x99, 0x03, 0xaa, 0x88, 0x9c, 0xc2,
	0x51, 0x48, 0x6f, 0xa9, 0xbf, 0xa2, 0xdc, 0x9d, 0xfb, 0x37, 0x1e, 0x67, 0xae, 0x73, 0x1d, 0x78,
	0x3e, 0xe5, 0xc1, 0x7a, 0xe1, 0xe2, 0x7f, 0xa4, 0x07, 0x68, 0xe6, 0xdf, 0xb9, 0x58, 0x22, 0x7d,
	0xd0, 0x82, 0x69, 0x38, 0xbf, 0x5a, 0xf2, 0x70, 0x81, 0x3b, 0x64, 0x00, 0xff, 0x1b, 0x1c, 0xfb,
	0x2b, 0x8a, 0x65, 0xa2, 0x81, 0x32, 0x73, 0xc2, 0xc9, 0x14, 0x23, 0xd2, 0x05, 0x79, 0xe9, 0x8c,
	0xb1, 0x52, 0x69, 0x0e, 0x9d, 0xb0, 0x35, 0x56, 0xcd, 0x7b, 0x18, 0xb5, 0x5e, 0xc3, 0x44, 0x59,
	0xfc, 0x39, 0xc6, 0x19, 0x1c, 0xb6, 0x67, 0xfd, 0x99, 0x65, 0x20, 0x7e, 0xdf, 0xe4, 0x25, 0x1b,
	0xb5, 0xfe, 0xf1, 0xe5, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xef, 0x9d, 0x0e, 0x89, 0x01,
	0x00, 0x00,
}
